<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前缀和</title>
      <link href="/2023/02/15/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
      <url>/2023/02/15/%E5%89%8D%E7%BC%80%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/798/">https://www.acwing.com/problem/content/798/</a></p><ol start="796"><li>子矩阵的和</li></ol><ul><li>   <a href="https://www.acwing.com/problem/content/description/798/">题目</a></li><li>   <a href="https://www.acwing.com/problem/content/submission/798/">提交记录</a></li><li>   <a href="https://www.acwing.com/problem/content/discussion/index/798/1/">讨论</a></li><li>   <a href="https://www.acwing.com/problem/content/solution/798/1/">题解</a></li><li>   <a href="https://www.acwing.com/problem/content/video/798/">视频讲解</a></li></ul><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个询问，每个询问包含四个整数 x1,y1,x2,y2，表示一个子矩阵的左上角坐标和右下角坐标。</p><p>对于每个询问输出子矩阵中所有数的和。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含三个整数 n，m，q。</p><p>接下来 n 行，每行包含 m 个整数，表示整数矩阵。</p><p>接下来 q 行，每行包含四个整数 x1,y1,x2,y2，表示一组询问。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 q 行，每行输出一个询问的结果。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n,m≤1000,<br>1≤q≤200000,<br>1≤x1≤x2≤n,<br>1≤y1≤y2≤m,<br>−1000≤矩阵内元素的值≤1000</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4 3</span><br><span class="line">1 7 2 4</span><br><span class="line">3 6 2 8</span><br><span class="line">2 1 2 3</span><br><span class="line">1 1 2 2</span><br><span class="line">2 1 3 4</span><br><span class="line">1 3 3 4</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">17</span><br><span class="line">27</span><br><span class="line">21</span><br></pre></td></tr></table></figure><hr><p>思路</p><p>先求矩阵和</p><p><img src="https://raw.githubusercontent.com/Auzc/BlogImage/main/img/202302152034272.png"></p><p>sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+a[i][j];</p><p>矩阵相减出答案</p><p><img src="https://raw.githubusercontent.com/Auzc/BlogImage/main/img/202302152035815.png"></p><p>cout&lt;&lt;sum[x2][y2]+sum[x1-1][y1-1]-sum[x1-1][y2]-sum[x2][y1-1]&lt;&lt;endl;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,q;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;q;</span><br><span class="line">    <span class="type">int</span> a[n+<span class="number">1</span>][m+<span class="number">1</span>];</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum[n+<span class="number">1</span>][m+<span class="number">1</span>];</span><br><span class="line">    sum[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i][j];</span><br><span class="line">            sum[i][j]=sum[i<span class="number">-1</span>][j]+sum[i][j<span class="number">-1</span>]-sum[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">        cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2;</span><br><span class="line">        cout&lt;&lt;sum[x2][y2]+sum[x1<span class="number">-1</span>][y1<span class="number">-1</span>]-sum[x1<span class="number">-1</span>][y2]-sum[x2][y1<span class="number">-1</span>]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Easy01_ CCF</title>
      <link href="/2023/02/15/Easy01-CCF/"/>
      <url>/2023/02/15/Easy01-CCF/</url>
      
        <content type="html"><![CDATA[<p><a href="http://118.190.20.162/view.page?gpid=T153">计算机软件能力认证考试系统</a></p><table><thead><tr><th>试题编号：</th><th>202209-1</th></tr></thead><tbody><tr><td>试题名称：</td><td>如此编码</td></tr><tr><td>时间限制：</td><td>1.0s</td></tr><tr><td>内存限制：</td><td>512.0MB</td></tr></tbody></table><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> a[n+<span class="number">1</span>],b[n+<span class="number">1</span>],c[n+<span class="number">1</span>];</span><br><span class="line">    c[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        c[i]=c[i<span class="number">-1</span>]*a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//计算b的关键部分，与提示内容对应</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        b[i+<span class="number">1</span>]=(m%c[i+<span class="number">1</span>]-sum)/c[i];</span><br><span class="line">        sum+=c[i]*b[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;b[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键提示</p><p><img src="https://raw.githubusercontent.com/Auzc/BlogImage/main/img/202302151249023.png"></p><table><thead><tr><th>试题编号：</th><th>202209-2</th></tr></thead><tbody><tr><td>试题名称：</td><td>何以包邮？</td></tr><tr><td>时间限制：</td><td>1.0s</td></tr><tr><td>内存限制：</td><td>512.0MB</td></tr></tbody></table><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">33</span>, M = <span class="number">300010</span>;</span><br><span class="line"><span class="type">int</span> n,x;</span><br><span class="line"><span class="type">int</span> a[N],b[M];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;x;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m=sum-x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=a[i];j--)</span><br><span class="line">                b[j]=<span class="built_in">max</span>(b[j],b[j-a[i]]+a[i]);</span><br><span class="line">    cout&lt;&lt;sum-b[m]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Auzc/BlogImage/main/img/202302151318281.png"></p><p>思路想到了</p><p>正着求最小，倒着就是求最大</p><p>背包问题</p><p>O（nm）</p><p>n本书，m价值</p><p>b[j]=max(b[j],b[j-a[i]]+a[i]);</p><p>满分做法二，类似于：潜水员：<br>状态表示 f(i,j)</p><p>集合：表示从前 i 个物品中选，且总体积至少是 j 的所有选法的集合。<br>属性：最小值。<br>本质是 𝟶𝟷 背包问题，初始化：f0=0，其余为正无穷。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, m, f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v, w;</span><br><span class="line">        cin &gt;&gt; v;</span><br><span class="line">        w = v;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = m; j &gt;= <span class="number">0</span>; j -- )</span><br><span class="line">            f[j] = <span class="built_in">min</span>(f[j], f[<span class="built_in">max</span>(<span class="number">0</span>, j - v)] + w);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; f[m] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CCF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>截断数组</title>
      <link href="/2023/02/13/%E6%88%AA%E6%96%AD%E6%95%B0%E7%BB%84/"/>
      <url>/2023/02/13/%E6%88%AA%E6%96%AD%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL sum[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    LL re=<span class="number">0</span>,temp=<span class="number">0</span>;    <span class="comment">//需要LL</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;sum[i];</span><br><span class="line">        sum[i]+=sum[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum[n]%<span class="number">3</span>!=<span class="number">0</span>||n&lt;<span class="number">3</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LL averge=sum[n]/<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;    <span class="comment">//不要等于n，否则划分和为0的时候会多加</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sum[i]==averge*<span class="number">2</span>)</span><br><span class="line">            re+=temp;</span><br><span class="line">        <span class="keyword">if</span>(sum[i]==averge)</span><br><span class="line">            temp++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;re&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/description/3959/">3956. 截断数组 - AcWing题库</a></p><p>给定一个长度为 n 的数组 a1,a2,…,an。</p><p>现在，要将该数组从中间截断，得到三个<strong>非空</strong>子数组。</p><p>要求，三个子数组内各元素之和都相等。</p><p>请问，共有多少种不同的截断方法？</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 n。</p><p>第二行包含 n 个整数 a1,a2,…,an。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示截断方法数量。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>前六个测试点满足 1≤n≤10。<br>所有测试点满足 1≤n≤105，−10000≤ai≤10000。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3 3</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数分别相乘求和</title>
      <link href="/2023/01/25/%E6%95%B0%E5%88%86%E5%88%AB%E7%9B%B8%E4%B9%98%E6%B1%82%E5%92%8C/"/>
      <url>/2023/01/25/%E6%95%B0%E5%88%86%E5%88%AB%E7%9B%B8%E4%B9%98%E6%B1%82%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//求出总和，结果就是。求和(sum-a[i])*a[i]/2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[n];</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> re=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        re+=(sum-a[i])*a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    re/=<span class="number">2</span>;</span><br><span class="line">    cout&lt;&lt;re;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4644"><li>求和</li></ol><ul><li>   <a href="https://www.acwing.com/problem/content/description/4647/">题目</a></li><li>   <a href="https://www.acwing.com/problem/content/submission/4647/">提交记录</a></li><li>   <a href="https://www.acwing.com/problem/content/discussion/index/4647/1/">讨论</a></li><li>   <a href="https://www.acwing.com/problem/content/solution/4647/1/">题解</a></li><li>   <a href="https://www.acwing.com/problem/content/video/4647/">视频讲解</a></li></ul><p>给定 n 个整数 a1,a2,···,an，求它们两两相乘再相加的和，即</p><p>S=a1·a2+a1·a3+···+a1·an+a2·a3+···+an−2·an−1+an−2·an+an−1·an</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入的第一行包含一个整数 n。</p><p>第二行包含 n 个整数 a1,a2,···,an。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数 S，表示所求的和。</p><p>请使用合适的数据类型进行运算。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>对于 30% 的数据，1≤n≤1000，1≤ai≤100。<br>对于所有评测用例，1≤n≤200000，1≤ai≤1000。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 3 6 9</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">117</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优秀的拆分（二进制）</title>
      <link href="/2023/01/24/%E4%BC%98%E7%A7%80%E7%9A%84%E6%8B%86%E5%88%86%EF%BC%88%E4%BA%8C%E8%BF%9B%E5%88%B6%EF%BC%89/"/>
      <url>/2023/01/24/%E4%BC%98%E7%A7%80%E7%9A%84%E6%8B%86%E5%88%86%EF%BC%88%E4%BA%8C%E8%BF%9B%E5%88%B6%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/description/2769/">2767. 优秀的拆分 - AcWing题库</a></p><p>一般来说，一个正整数可以拆分成若干个正整数的和。</p><p>例如，1=1，10=1+2+3+4 等。</p><p>对于正整数 n 的一种特定拆分，我们称它为“优秀的”，当且仅当在这种拆分下，n 被分解为了若干个<strong>不同</strong>的 2 的<strong>正整数</strong>次幂。</p><p>注意，一个数 x 能被表示成 2 的正整数次幂，当且仅当 x 能通过正整数个 2 相乘在一起得到。</p><p>例如，10=8+2=23+21 是一个优秀的拆分。</p><p>但是，7=4+2+1=22+21+20 就不是一个优秀的拆分，因为 1 不是 2 的正整数次幂。</p><p>现在，给定正整数 n，你需要判断这个数的所有拆分中，是否存在优秀的拆分。</p><p>若存在，请你给出具体的拆分方案。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入文件只有一行，一个正整数 n，代表需要判断的数。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>如果这个数的所有拆分中，存在优秀的拆分。</p><p>那么，你需要<strong>从大到小</strong>输出这个拆分中的每一个数，相邻两个数之间用一个空格隔开。</p><p>可以证明，在规定了拆分数字的顺序后，该拆分方案是<strong>唯一</strong>的。</p><p>若不存在优秀的拆分，输出 “-1”（不包含双引号）。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>对于 20% 的数据，n≤10。<br>对于另外 20% 的数据，保证 n 为奇数。<br>对于另外 20% 的数据，保证 n 为 2 的正整数次幂。<br>对于 80% 的数据，n≤1024。<br>对于 100% 的数据，1≤n≤1×107。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 2</span><br></pre></td></tr></table></figure><h4 id="样例1解释"><a href="#样例1解释" class="headerlink" title="样例1解释"></a>样例1解释</h4><p>6=4+2=22+21 是一个优秀的拆分。</p><p>注意，6=2+2+2 不是一个优秀的拆分，因为拆分成的 3 个数不满足每个数互不相同。</p><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n &amp; <span class="number">1</span>) <span class="built_in">puts</span> (<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">31</span>;i &gt;= <span class="number">0</span>;i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n &gt;&gt; i &amp; <span class="number">1</span>) cout &lt;&lt; (<span class="number">1</span> &lt;&lt; i) &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++取整</title>
      <link href="/2023/01/24/C-%E5%8F%96%E6%95%B4/"/>
      <url>/2023/01/24/C-%E5%8F%96%E6%95%B4/</url>
      
        <content type="html"><![CDATA[<p><strong>#include &lt;math.h&gt; double floor(double</strong>  <em>x</em> <strong>);</strong>   </p><p><strong>float floorf(float</strong> <em>x</em><strong>);<br>long double floorl(long double</strong> <em>x</em><strong>);</strong></p><p>double floor(double x);</p><p>double ceil(double x);</p><p>使用floor函数。floor(x)返回的是小于或等于x的最大整数。<br>如：     floor(10.5) == 10    floor(-10.5) == -11</p><p>使用ceil函数。ceil(x)返回的是大于x的最小整数。<br>如：     ceil(10.5) == 11    ceil(-10.5) ==-10</p><p>    floor()是向负无穷大舍入，floor(-10.5) == -11；<br>ceil()是向正无穷大舍入，ceil(-10.5) == -10</p><p><a href="http://www.diybl.com/course/3_program/c++/cppjs/20090403/163994.html">不得不说点：/ % 四舍五入 向上取整（ceil()） 向下取整（floor）</a></p><p> 1. /</p><p>    //Test “/“<br>    cout &lt;&lt; “Test &quot;/&quot;!” &lt;&lt; endl;<br>    cout &lt;&lt; “7   / 2   = “ &lt;&lt; 7/2 &lt;&lt; endl;      //3<br>    cout &lt;&lt; “7   / 2.0 = “ &lt;&lt; 7/2.0 &lt;&lt; endl;    //3.5<br>    cout &lt;&lt; “7.0 / 2   = “ &lt;&lt; 7.0/2 &lt;&lt; endl;    //3.5<br>    cout &lt;&lt; “7.0 / 2.0 = “ &lt;&lt; 7.0/2.0 &lt;&lt; endl; //3.5<br>    cout &lt;&lt; “7   / 3   = “ &lt;&lt; 7/3 &lt;&lt; endl;      //2<br>    cout &lt;&lt; endl;</p><ol start="2"><li><p>%<br>    //Test “%”<br>    cout &lt;&lt; “Test &quot;%&quot;!” &lt;&lt; endl;<br>    cout &lt;&lt; “9   % 3   = “ &lt;&lt; 9%3 &lt;&lt; endl;      //0<br>    cout &lt;&lt; “9   % 4   = “ &lt;&lt; 9%4 &lt;&lt; endl;      //1<br>    //cout &lt;&lt; “9.0 % 3   = “ &lt;&lt; 9.0%3 &lt;&lt; endl;<br>    //cout &lt;&lt; “9   % 3.0 = “ &lt;&lt; 9%3.0 &lt;&lt; endl;<br>    cout &lt;&lt; endl;</p></li><li><p>四舍五入<br>    //Test round()<br>    cout &lt;&lt; “Test &quot;四舍五入&quot;!” &lt;&lt; endl;<br>    double dRoundA = 1.4;<br>    double dRoundB = 1.6;<br>    double dRoundLowA = -1.4;<br>    double dRoundLowB = -1.6;<br>    double dRoundLowC = 0.0;<br>    cout &lt;&lt; dRoundA &lt;&lt; “ = “ &lt;&lt; RoundEx(dRoundA) &lt;&lt; endl;         //1<br>    cout &lt;&lt; dRoundB &lt;&lt; “ = “ &lt;&lt; RoundEx(dRoundB) &lt;&lt; endl;         //2<br>    cout &lt;&lt; dRoundLowA &lt;&lt; “ = “ &lt;&lt; RoundEx(dRoundLowA) &lt;&lt; endl;   //-1<br>    cout &lt;&lt; dRoundLowB &lt;&lt; “ = “ &lt;&lt; RoundEx(dRoundLowB) &lt;&lt; endl;   //-2<br>    cout &lt;&lt; dRoundLowC &lt;&lt; “ = “ &lt;&lt; RoundEx(dRoundLowC) &lt;&lt; endl;   //0<br>    cout &lt;&lt; endl;</p></li></ol><p>double RoundEx(const double&amp; dInput)<br>{<br>    double dIn = dInput;<br>    if (dInput &gt;= 0.0)    //???<br>    {<br>        return int(dIn + 0.5);<br>    } <br>    else<br>    {<br>        return int(dIn - 0.5);<br>    }<br>}</p><ol start="4"><li><p>ceil() 向上取整<br>    //Test ceil() 向上取整<br>    cout &lt;&lt; “Test ceil() 向上取整!” &lt;&lt; endl; <br>    cout &lt;&lt; “ceil 1.2 = “ &lt;&lt; ceil(1.2) &lt;&lt; endl;      //2<br>    cout &lt;&lt; “ceil 1.8 = “ &lt;&lt; ceil(1.8) &lt;&lt; endl;      //2<br>    cout &lt;&lt; “ceil -1.2 = “ &lt;&lt; ceil(-1.2) &lt;&lt; endl;    //-1<br>    cout &lt;&lt; “ceil -1.8 = “ &lt;&lt; ceil(-1.8) &lt;&lt; endl;    //-1<br>    cout &lt;&lt; “ceil 0.0 = “ &lt;&lt; ceil(0.0) &lt;&lt; endl;      //0<br>    cout &lt;&lt; endl;</p></li><li><p>floor() 向下取整<br>    //Test floor() 向下取整<br>    cout &lt;&lt; “Test floor() 向下取整!” &lt;&lt; endl;<br>    cout &lt;&lt; “floor 1.2 = “ &lt;&lt; floor(1.2) &lt;&lt; endl;    //1<br>    cout &lt;&lt; “floor 1.8 = “ &lt;&lt; floor(1.8) &lt;&lt; endl;    //1<br>    cout &lt;&lt; “floor -1.2 = “ &lt;&lt; floor(-1.2) &lt;&lt; endl; //-2<br>    cout &lt;&lt; “floor -1.8 = “ &lt;&lt; floor(-1.8) &lt;&lt; endl; //-2<br>    cout &lt;&lt; “floor 0.0 = “ &lt;&lt; floor(0.0) &lt;&lt; endl;    //0<br>    cout &lt;&lt; endl;</p></li></ol><p>16.1.21:标红的部分需要记住，便于理解记忆</p>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打印浮点数精度问题</title>
      <link href="/2023/01/12/%E6%89%93%E5%8D%B0%E6%B5%AE%E7%82%B9%E6%95%B0%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98/"/>
      <url>/2023/01/12/%E6%89%93%E5%8D%B0%E6%B5%AE%E7%82%B9%E6%95%B0%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="C-如何保留2位小数输出"><a href="#C-如何保留2位小数输出" class="headerlink" title="C++如何保留2位小数输出"></a><a href="https://www.cnblogs.com/stacktrace/p/5142470.html">C++如何保留2位小数输出</a></h2><p>cout&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(2);//需要头文件#include <iomanip></iomanip></p><p>然后再输出实数类型变量即可以保留2位小数输出了，当然你要保留三位小数，setprecision(3)就行。</p><p>setprecision是指设置输出精度，当没有</p><p>cout&lt;&lt;setiosflags(ios::fixed)</p><p>时，输出格式是数据的有效位数，例如</p><p>float a = 123.666;<br>cout&lt;&lt;setprecision(5)&lt;&lt;a;</p><p>将输出123.67（注意这里，它会四舍五入）。如果setprecision里的参数小于整数位数，将以指数形式输出，例如</p><p>float a = 123.666;<br>cout&lt;&lt;setprecision(2)&lt;&lt;a;</p><p>将输出1.2e+002。</p><p>setiosflags(ios::fixed)是指以固定的浮点显示，当setiosflags(ios::fixed)和serprecision(n)两个一起用时就表示保留n位小数输出。这里还要注意，每次输出只要设置一次就行了，因为这两个的作用范围是后续对象，而不是仅对后一个对象起作用。</p><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,num);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计数出现的次数</title>
      <link href="/2023/01/12/%E7%BB%9F%E8%AE%A1%E6%95%B0%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/"/>
      <url>/2023/01/12/%E7%BB%9F%E8%AE%A1%E6%95%B0%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/description/3403/">3400. 统计次数 - AcWing题库</a>    </p><p><img src="https://raw.githubusercontent.com/Auzc/BlogImage/main/img/202301121544556.png"></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> j=i;</span><br><span class="line">        <span class="keyword">while</span>(j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k==j%<span class="number">10</span>)&#123;</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">            j/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哎，这题不超时</p><p>本来想好的，拆开做</p><p>比如1111分解为1000和111，1000部分+1000～1111</p><p>规律：</p><p>k=2～9，规律相同</p><p>n=10,sum=1</p><p>n=100,sum=20</p><p>n=1000,sum=300</p><p>n=10000,sum=4000</p><p>n=100000,sum=50000</p><p>m=1000000,sum=600000</p><p>k=1，有些特殊，以上sum各+1</p><p>k=0，不好说</p><p>n=10,sum=2</p><p>n=100,sum=11</p><p>n=1000,sum=192</p><p>n=10000,sum=2893</p><p>n=100000,sum=38894</p><p>n=1000000,sum=488895</p><p>n=10000000,sum=5888896</p>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>析</title>
      <link href="/2023/01/11/%E6%9E%90/"/>
      <url>/2023/01/11/%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="滕王阁序"><a href="#滕王阁序" class="headerlink" title="滕王阁序"></a>滕王阁序</h2><p>豫章故郡<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-4">[注 1]</a>，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-5">[注 2]</a>。家君作宰，路出名区；童子何知，躬逢胜饯。</p><p>时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖𬴂于上路，访风景于崇阿；临帝子之长洲，得天人之旧馆。层峦耸翠<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-6">[注 3]</a>，上出重霄；飞阁流丹<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-7">[注 4]</a>，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-8">[注 5]</a>。</p><p>披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-9">[注 6]</a>，青雀黄龙之舳<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-10">[注 7]</a>。云销雨霁，彩彻区明<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-11">[注 8]</a>。落霞与孤鹜齐飞，秋水共长天一色<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-12">[注 9]</a>。渔舟唱晚，响穷彭蠡之滨；雁阵惊寒，声断衡阳之浦。</p><p>遥襟甫畅<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-13">[注 10]</a>，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人？萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？</p><p>嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-14">[注 11]</a>，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-15">[注 12]</a>。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！</p><p>勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？</p><p>呜乎！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔：</p><p>滕王高阁临江渚，佩玉鸣鸾罢歌舞。</p><p>画栋朝飞南浦云，珠帘暮卷西山雨。</p><p>闲云潭影日悠悠，物换星移几度秋。</p><p>阁中帝子今何在？槛外长江空自流。<a href="https://zh.wikipedia.org/wiki/%E6%BB%95%E7%8E%8B%E9%98%81%E5%BA%8F#cite_note-16">[4]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发</title>
      <link href="/2023/01/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
      <url>/2023/01/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h1><p>微信小程序的基本文件构造和项目目录结构说明如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── app.js     # 小程序的逻辑文件</span><br><span class="line">├── app.json   # 小程序的配置文件</span><br><span class="line">├── app.wxss   # 全局公共样式文件</span><br><span class="line">├── pages      # 存放小程序的各个页面</span><br><span class="line">│   ├── index  # index页面</span><br><span class="line">│   │   ├── index.js     # 页面逻辑</span><br><span class="line">│   │   ├── index.wxml   # 页面结构</span><br><span class="line">│   │   └── index.wxss   # 页面样式表</span><br><span class="line">│   └── logs   # logs页面</span><br><span class="line">│       ├── logs.js      # 页面逻辑</span><br><span class="line">│       ├── logs.json    # 页面配置</span><br><span class="line">│       ├── logs.wxml    # 页面结构</span><br><span class="line">│       └── logs.wxss    # 页面样式表</span><br><span class="line">├── project.config.json</span><br><span class="line">└── utils</span><br><span class="line">    └── util.js</span><br></pre></td></tr></table></figure><p>根目录下有3个文件: app.js, app.json, app.wxss,小程序必须有这3个描述APP的文件,并放在根目录下。这3个是应用程序级别的文件,与之平行的还有一个pages 文件夹,用来存放小程序的各个页面。</p><p>我们可以和 web 前端开发技术做个类比：<br>wxml 类似于 HTML 文件，用来编写页面的标签和骨架，但里面只能用小程序自己封装的组件；<br>wxss 类似于 CSS 文件，用来编写页面样式，只是把 css 文件换成了 wxss 文件；<br>js 文件类似于前端编程中的 JavaScript 文件，用来编写小程序的页面逻辑；<br>json 文件用来配置页面的样式和行为。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashMap</title>
      <link href="/2023/01/09/HashMap/"/>
      <url>/2023/01/09/HashMap/</url>
      
        <content type="html"><![CDATA[<h2 id="哈希map"><a href="#哈希map" class="headerlink" title="哈希map"></a>哈希map</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="type">int</span>, <span class="type">int</span>&gt; umap = &#123; &#123;<span class="number">2</span>, <span class="number">10</span>&#125;,&#123;<span class="number">1</span>, <span class="number">20</span>&#125;,&#123;<span class="number">3</span>,<span class="number">30</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历unordered_map</span></span><br><span class="line"><span class="comment">//注意一个用指针一个用点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;item : umap) &#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; item.first &lt;&lt; <span class="string">&quot; -&gt; &quot;</span> &lt;&lt; item.second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> it = umap.begin();it != umap.end();++it)  &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;it-&gt;first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it-&gt;second&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;     </span><br><span class="line"></span><br><span class="line"><span class="comment">//插入元素</span></span><br><span class="line"><span class="comment">//一般插入</span></span><br><span class="line">umap.insert(<span class="built_in">pair</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt;(<span class="number">4</span>,<span class="number">9</span>));  </span><br><span class="line"><span class="comment">//数组的形式，如果存在就修改，否则插入</span></span><br><span class="line">umap[<span class="number">3</span>] = <span class="number">7</span>;           </span><br><span class="line">umap[<span class="number">5</span>]=<span class="number">99</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//按key删除元素</span></span><br><span class="line">umap.erase(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//按迭代器删除元素</span></span><br><span class="line">umap.erase(umap.begin());</span><br><span class="line"></span><br><span class="line"><span class="comment">//按key查找元素</span></span><br><span class="line"><span class="keyword">auto</span> it = umap.find(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(it != umap.end())&#123;   <span class="comment">//查找成功，修改其值</span></span><br><span class="line">    it-&gt;second=<span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;    <span class="comment">//查找失败，直接插入</span></span><br><span class="line">    umap[<span class="number">3</span>]=<span class="number">88</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="出现次数最多的数"><a href="#出现次数最多的数" class="headerlink" title="出现次数最多的数"></a>出现次数最多的数</h2><p><a href="https://www.acwing.com/problem/content/description/3195/">3192. 出现次数最多的数 - AcWing题库</a></p><h3 id="开大数组"><a href="#开大数组" class="headerlink" title="开大数组"></a>开大数组</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10001</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> num,sum=<span class="number">0</span>,flag_a=<span class="number">100000</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;num;</span><br><span class="line">        a[num]++;</span><br><span class="line">        <span class="keyword">if</span>(a[num]==sum&amp;&amp;num&lt;flag_a)&#123;</span><br><span class="line">            flag_a=num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[num]&gt;sum)&#123;</span><br><span class="line">            flag_a=num;</span><br><span class="line">            sum=a[num];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;flag_a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="哈希map-1"><a href="#哈希map-1" class="headerlink" title="哈希map"></a>哈希map</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> num,sum=<span class="number">0</span>,flag_a=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mymap;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;num;</span><br><span class="line">        mymap[num]++;</span><br><span class="line">        <span class="keyword">if</span>(mymap[num]==sum&amp;&amp;num&lt;flag_a)&#123;</span><br><span class="line">            flag_a=num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(mymap[num]&gt;sum)&#123;</span><br><span class="line">            flag_a=num;</span><br><span class="line">            sum=mymap[num];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;flag_a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> CCF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数的表示</title>
      <link href="/2023/01/09/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/"/>
      <url>/2023/01/09/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="取值范围："><a href="#取值范围：" class="headerlink" title="取值范围："></a>取值范围：</h3><p>unsigned int 0～4294967295</p><p>int 2147483648～2147483647 9位</p><p>unsigned long 0～4294967295</p><p>long 2147483648～2147483647</p><p>long long的最大值：9223372036854775807 19位</p><p>long long的最小值：-9223372036854775808</p><p>unsigned long long的最大值：18446744073709551615</p><p>__int64的最大值：9223372036854775807</p><p>__int64的最小值：-9223372036854775808</p><p>unsigned __int64的最大值：18446744073709551615</p><h3 id="无穷大："><a href="#无穷大：" class="headerlink" title="无穷大："></a>无穷大：</h3><p>对于int类型的数据，如果我们想用一个数来表示无穷大，使得它比输入的所有的数都大，可以选择<strong>0x3f3f3f3f</strong> 或 <strong>0x7fffffff</strong></p><p>0x3f3f3f3f 数值为 1061109567</p><p>0x7fffffff 数值为2139062143</p><p>负无穷大则可以用 -0x3f3f3f3f 或 -0x7fffffff</p><p>-0x3f3f3f3f 数值为-1061109567</p><p>-0x7fffffff 数值为-2139062143</p><p>在题目中常使用 0x3f3f3f3f，因为0x7fffffff 容易越界，定义全局变量</p><p>const int inf = 0x3f3f3f3f;</p><h3 id="PI的表示："><a href="#PI的表示：" class="headerlink" title="PI的表示："></a>PI的表示：</h3><p>方法1：const double PI = 3.1415926535898;</p><p>方法2：**#define PI acos(-1)**</p><p>建议使用方法2，如下：</p><p>#include<br>#include<br>#include&lt;math.h&gt;<br>#include&lt;stdlib.h&gt;<br>using namespace std;<br>int main()<br>{<br>cout&lt;&lt;acos(-1)&lt;&lt;endl;<br>return 0;</p><p>}</p><h3 id="char型："><a href="#char型：" class="headerlink" title="char型："></a>char型：</h3><p>char ch;</p><p>输入： cin&gt;&gt;ch; 或scanf(“%c”,&amp;ch);</p><p>scanf(“%c”,&amp;ch); 不常用，容易出错，比如下面的例子：</p><p>cin&gt;&gt;ch;</p><p>cout&lt;&lt;ch&lt;&lt;endl;</p><p>scanf(“%c”,&amp;ch);</p><p>cout&lt;&lt;ch&lt;&lt;endl;</p><p>上面四句话，运行结果第二个cout输出的不是我们原来输入的字符，因为如果第一次输入字符后，按了回车，那么第二次输入的就是回车，也就是scanf(“%c”,&amp;ch);把回车吸收了。所以如果要正确使用，要在中间加上一句getchar();</p><p>cin&gt;&gt;ch;</p><p>cout&lt;&lt;ch&lt;&lt;endl;</p><p>getchar();</p><p>scanf(“%c”,&amp;ch);</p><p>cout&lt;&lt;ch&lt;&lt;endl;</p><p>对于字符数组 char chs[10];</p><p>输入： cin&gt;&gt;chs; 或scanf(“%s”,chs);</p><p>注意：用字符数组存放字符串时，如果一个字符串中存在空格，cin&gt;&gt;chs;不可以存空格</p><p>gets(chs);可以存空格.</p>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> CCF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing周赛</title>
      <link href="/2023/01/08/Acwing%E5%91%A8%E8%B5%9B/"/>
      <url>/2023/01/08/Acwing%E5%91%A8%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="AcWing周赛"><a href="#AcWing周赛" class="headerlink" title="AcWing周赛"></a>AcWing周赛</h1><p>思路复盘与记录</p><h2 id="AcWing第62场周赛笔记"><a href="#AcWing第62场周赛笔记" class="headerlink" title="AcWing第62场周赛笔记"></a>AcWing第62场周赛笔记</h2><h3 id="三个元素"><a href="#三个元素" class="headerlink" title="三个元素"></a>三个元素</h3><p><a href="https://www.acwing.com/problem/content/4503/">题目详情</a></p><h4 id="个人暴力代码（输入顺便比较）"><a href="#个人暴力代码（输入顺便比较）" class="headerlink" title="个人暴力代码（输入顺便比较）"></a>个人暴力代码（输入顺便比较）</h4><p>输入时找到最小，遍历找两个不一样，排序</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[n];</span><br><span class="line">    <span class="type">int</span> min_a=<span class="number">1e9</span>,min_a_i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(min_a&gt;a[i])&#123;</span><br><span class="line">            min_a=a[i];</span><br><span class="line">            min_a_i=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> temp_i1;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=min_a)&#123;</span><br><span class="line">            temp_i1=i;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=min_a&amp;&amp;a[i]!=a[temp_i1])&#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[i]&gt;a[temp_i1])&#123;</span><br><span class="line">                        <span class="built_in">cout</span>&lt;&lt;min_a_i+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;temp_i1+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">cout</span>&lt;&lt;min_a_i+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;temp_i1+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;-1 -1 -1&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="容器代码（-map-size-）"><a href="#容器代码（-map-size-）" class="headerlink" title="容器代码（ map.size() ）"></a>容器代码（ map.size() ）</h4><p>map容器操作</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pos;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">        pos[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pos.size() &lt; <span class="number">3</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1 -1 -1&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [k, v]: pos) res.push_back(v);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i ++ )</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; res[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="收集卡牌"><a href="#收集卡牌" class="headerlink" title="收集卡牌"></a>收集卡牌</h3><p><a href="https://www.acwing.com/problem/content/4504/">题目详情</a></p><h4 id="个人编码记录（判断基数变动）"><a href="#个人编码记录（判断基数变动）" class="headerlink" title="个人编码记录（判断基数变动）"></a>个人编码记录（判断基数变动）</h4><p>开数组，check，集齐一套，判断基数加一（节省遍历减一时间），倒着检查可能会取巧。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> check[n+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> base=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        check[a[i]]++;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=n;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(check[j]==base)&#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">1</span>)&#123;</span><br><span class="line">            base++;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="yxc代码（一种判断全套方法）"><a href="#yxc代码（一种判断全套方法）" class="headerlink" title="yxc代码（一种判断全套方法）"></a>yxc代码（一种判断全套方法）</h4><p>思路：每录一个，先记录在卡牌数组里，如果记录前为0，不同牌类数（tot）++，当不同牌类数==n，打印1，遍历减去一套牌，当一种牌数量降为0，tot–。</p><h4 id="复合代码"><a href="#复合代码" class="headerlink" title="复合代码"></a>复合代码</h4><p>结合下，不用遍历减一套，统计下套数为基数，不过还需要遍历。</p><h2 id="AcWing第63场周赛笔记"><a href="#AcWing第63场周赛笔记" class="headerlink" title="AcWing第63场周赛笔记"></a>AcWing第63场周赛笔记</h2><h3 id="字符串消除"><a href="#字符串消除" class="headerlink" title="字符串消除"></a>字符串消除</h3><p><a href="https://www.acwing.com/problem/content/4507/">题目详情</a></p><h4 id="个人栈代码（类括号抵消问题）"><a href="#个人栈代码（类括号抵消问题）" class="headerlink" title="个人栈代码（类括号抵消问题）"></a>个人栈代码（类括号抵消问题）</h4><p>栈应用 stack push pop top</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    getline(<span class="built_in">cin</span>,str);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="type">char</span>&gt; s;</span><br><span class="line">    s.push(<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    s.push(str[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">char</span> temp=s.top();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;str.size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=s.top();</span><br><span class="line">        s.push(str[i]);</span><br><span class="line">        <span class="keyword">if</span>(s.top()==temp)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            s.pop();</span><br><span class="line">            s.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="string操作代码（-pop-back-）"><a href="#string操作代码（-pop-back-）" class="headerlink" title="string操作代码（ pop_back() ）"></a>string操作代码（ pop_back() ）</h4><p>string也可以pop</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str, stk;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c: str)</span><br><span class="line">        <span class="keyword">if</span> (stk.back() == c)</span><br><span class="line">        &#123;</span><br><span class="line">            stk.pop_back();</span><br><span class="line">            res ++ ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> stk += c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res % <span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 练习赛 </tag>
            
            <tag> Acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法基础笔记</title>
      <link href="/2023/01/07/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/01/07/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="算法基础笔记"><a href="#算法基础笔记" class="headerlink" title="算法基础笔记"></a>算法基础笔记</h1><h2 id="第一节"><a href="#第一节" class="headerlink" title="第一节"></a>第一节</h2><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><h4 id="分治思想"><a href="#分治思想" class="headerlink" title="分治思想"></a>分治思想</h4><p>确定分界点 q[l],q[(l+r)/2],q[r] 随机<br>调整区间 &lt;=x的放x左边<br>递归处理左右两段</p><h4 id="暴力方法"><a href="#暴力方法" class="headerlink" title="暴力方法"></a>暴力方法</h4><p>开a[],b[]</p><h4 id="优美方法"><a href="#优美方法" class="headerlink" title="优美方法"></a>优美方法</h4><p>两个指针<br>左右指针i、j分别往中间走，先走左指针左指针i，检测到大于等于x，走右指针j，检测到小于等于x，即两数错位，swap交换。<br>I指针左边都是小于等于3的，j指针右边都是大于等于3的。</p><h4 id="初试代码"><a href="#初试代码" class="headerlink" title="初试代码"></a>初试代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N+<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="type">int</span> x=a[(l+r)/<span class="number">2</span>],i=l<span class="number">-1</span>,j=r+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">        <span class="keyword">do</span> i++;<span class="keyword">while</span>(a[i]&lt;x);</span><br><span class="line">        <span class="keyword">do</span> j--;<span class="keyword">while</span>(a[j]&gt;x);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) swap(a[i],a[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(a,l,j);</span><br><span class="line">    quick_sort(a,j+<span class="number">1</span>,r);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(a,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>注意本题数据己加强。<br>快速排序过程中，如果每次取区问起点或者终点作为分界点，则会超时。<br>分界点换成随机值，或者区间中点即可。</p><p>如果取边界且整体基本有序的时候，快排退化为冒泡。</p><h4 id="代码模版"><a href="#代码模版" class="headerlink" title="代码模版"></a>代码模版</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[l + r &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) swap(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(q, l, j), quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><h4 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h4><p>O(nlogn)——共计logn层，每层O(n)。</p><h4 id="分治思想-1"><a href="#分治思想-1" class="headerlink" title="分治思想"></a>分治思想</h4><p>（快排是排序后分块，归并是先分块再排序）</p><p>确定分界点 mid=（l+r）/2<br>先递归排序左边和右边（被拆分成个数，数数比较排序，整合到同一数组，数组整合排序）<br>归并，合二为一</p><p>稳定 ：指两个相同的数排序后相对顺序会不会发生变化</p><h4 id="初试代码-1"><a href="#初试代码-1" class="headerlink" title="初试代码"></a>初试代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N],temp[N];</span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    merge_sort(a,l,mid),merge_sort(a,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="type">int</span> temp_i=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i=l,j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=a[j]) temp[temp_i++]=a[i++];</span><br><span class="line">        <span class="keyword">else</span> temp[temp_i++]=a[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=mid) temp[temp_i++]=a[i++];</span><br><span class="line">    <span class="keyword">while</span>(j&lt;=r) temp[temp_i++]=a[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>;i&lt;=r;i++,j++)&#123;</span><br><span class="line">        a[i]=temp[j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    merge_sort(a,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码模版-1"><a href="#代码模版-1" class="headerlink" title="代码模版"></a>代码模版</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    merge_sort(q, l, mid);</span><br><span class="line">    merge_sort(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h3><h4 id="整数二分思想"><a href="#整数二分思想" class="headerlink" title="整数二分思想"></a>整数二分思想</h4><h4 id="数的范围代码"><a href="#数的范围代码" class="headerlink" title="数的范围代码"></a>数的范围代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;    <span class="comment">//左边界模版</span></span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[mid]&gt;=k) r=mid;</span><br><span class="line">            <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[l]!=k)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;-1 -1&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;    <span class="comment">//右边界模版</span></span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid=(l+r+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[mid]&lt;=k) l=mid;</span><br><span class="line">                <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="整数二分算法代码模版"><a href="#整数二分算法代码模版" class="headerlink" title="整数二分算法代码模版"></a>整数二分算法代码模版</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> x)</span> &#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) r = mid;    <span class="comment">// check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浮点数二分算法模板"><a href="#浮点数二分算法模板" class="headerlink" title="浮点数二分算法模板"></a>浮点数二分算法模板</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(<span class="type">double</span> x)</span> &#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">bsearch_3</span><span class="params">(<span class="type">double</span> l, <span class="type">double</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-6</span>;   <span class="comment">// eps 表示精度，取决于题目对精度的要求</span></span><br><span class="line">    <span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数的三次方根代码"><a href="#数的三次方根代码" class="headerlink" title="数的三次方根代码"></a>数的三次方根代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> a;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        a=-a;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> l=<span class="number">0</span>,r=a;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">1</span>)&#123;</span><br><span class="line">        l=<span class="number">-1</span>,r=<span class="number">1</span>;  <span class="comment">//0.001 的答案范围在-1 — 1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;=<span class="number">1e-7</span>)&#123;        <span class="comment">//精度设置比输出高一位</span></span><br><span class="line">        <span class="type">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid*mid*mid&gt;=a) r=mid;</span><br><span class="line">     <span class="keyword">else</span> l=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;-&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高精度"><a href="#高精度" class="headerlink" title="高精度"></a>高精度</h3><h4 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h4><p>初试代码</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s1,s2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line">    <span class="type">int</span> a_i=<span class="number">0</span>,b_i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=s1.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        a[a_i++]=s1[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=s2.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        b[b_i++]=s2[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> max_l=max(a_i,b_i)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;max_l;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]+b[i]+temp&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">            c[i]=a[i]+b[i]+temp<span class="number">-10</span>;</span><br><span class="line">            temp=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            c[i]=a[i]+b[i]+temp;</span><br><span class="line">            temp=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(c[max_l]==<span class="number">0</span>)&#123;</span><br><span class="line">        max_l--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=max_l;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三章-搜索与图论"><a href="#第三章-搜索与图论" class="headerlink" title="第三章 搜索与图论"></a>第三章 搜索与图论</h2><h3 id="树与图的存储"><a href="#树与图的存储" class="headerlink" title="树与图的存储"></a>树与图的存储</h3><h2 id="第六章-贪心"><a href="#第六章-贪心" class="headerlink" title="第六章 贪心"></a>第六章 贪心</h2><h3 id="区间选点"><a href="#区间选点" class="headerlink" title="区间选点"></a>区间选点</h3><p>所有区间右端点大小排序后<br>只选择右端点</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Range</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">&#125;range[N];</span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp</span><span class="params">(Range &amp;a,Range &amp;b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.r&lt;b.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;range[i].l&gt;&gt;range[i].r;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(range,range+n,cmp);</span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>,p=<span class="number">-2e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p&lt;=range[i].r&amp;&amp;p&gt;=range[i].l)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            p=range[i].r;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//或者 p&lt;range[i].l ......</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;count;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Acwing </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
